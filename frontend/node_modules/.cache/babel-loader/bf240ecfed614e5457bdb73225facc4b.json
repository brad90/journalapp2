{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport logsReducer from './logsSlice';\nimport authReducer from './authSlice';\nexport const store = configureStore({\n  reducer: {\n    journallogs: logsReducer,\n    authenticate: authReducer\n  }\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n}; // Infer the `RootState` and `AppDispatch` types from the store itself\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", true);","map":{"version":3,"sources":["/Users/stephen/business/journal-full/frontend/src/redux/store.ts"],"names":["configureStore","logsReducer","authReducer","store","reducer","journallogs","authenticate","useAppDispatch","useDispatch"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;AACnCI,EAAAA,OAAO,EAAE;AACRC,IAAAA,WAAW,EAAEJ,WADL;AAERK,IAAAA,YAAY,EAAEJ;AAFN;AAD0B,CAAD,CAA5B;AAOP,OAAO,MAAMK,cAAc,GAAG;AAAA;;AAAA,SAAMC,WAAW,EAAjB;AAAA,CAAvB,C,CAEP;;GAFaD,c","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport logsReducer from './logsSlice';\nimport authReducer from './authSlice';\n\nexport const store = configureStore({\n\treducer: {\n\t\tjournallogs: logsReducer,\n\t\tauthenticate: authReducer,\n\t},\n});\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}