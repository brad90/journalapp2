{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst user = 'hello';\nconst initialState = {\n  isLoggedIn: false\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  // NOT ASYNC\n  reducers: {\n    reset: state => {\n      state.isLoading = state.isError = state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  // ASYNC\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      console.log('fetching exercises...');\n    });\n    builder.addCase(register.fulfilled, state => {\n      console.log('fetching exercises...');\n    });\n    builder.addCase(register.rejected, state => {\n      console.log('fetching exercises...');\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/stephen/business/journal-full/frontend/src/redux/authSlice.ts"],"names":["createSlice","user","initialState","isLoggedIn","authSlice","name","reducers","reset","state","isLoading","isError","isSuccess","message","extraReducers","builder","addCase","register","pending","console","log","fulfilled","rejected","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA6D,kBAA7D;AAUA,MAAMC,IAAI,GAAG,OAAb;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,UAAU,EAAE;AADQ,CAArB;AAIA,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AACpCK,EAAAA,IAAI,EAAE,MAD8B;AAEpCH,EAAAA,YAFoC;AAGpC;AACAI,EAAAA,QAAQ,EAAE;AACTC,IAAAA,KAAK,EAAGC,KAAD,IAAW;AACjBA,MAAAA,KAAK,CAACC,SAAN,GAAkBD,KAAK,CAACE,OAAN,GAAgBF,KAAK,CAACG,SAAN,GAAkB,KAApD;AACAH,MAAAA,KAAK,CAACI,OAAN,GAAgB,EAAhB;AACA;AAJQ,GAJ0B;AAUpC;AACAC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC3BA,IAAAA,OAAO,CAACC,OAAR,CAAgBC,QAAQ,CAACC,OAAzB,EAAmCT,KAAD,IAAgB;AACjDU,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,KAFD;AAGAL,IAAAA,OAAO,CAACC,OAAR,CAAgBC,QAAQ,CAACI,SAAzB,EAAqCZ,KAAD,IAAgB;AACnDU,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,KAFD;AAGAL,IAAAA,OAAO,CAACC,OAAR,CAAgBC,QAAQ,CAACK,QAAzB,EAAoCb,KAAD,IAAgB;AAClDU,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,KAFD;AAGA;AArBmC,CAAD,CAA7B;AAwBP,OAAO,MAAM;AAAEZ,EAAAA;AAAF,IAAYH,SAAS,CAACkB,OAA5B;AACP,eAAelB,SAAS,CAACmB,OAAzB","sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport interface Login {\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tconfirmpassword: string;\n}\n\nconst user = 'hello';\n\nconst initialState = {\n\tisLoggedIn: false,\n};\n\nexport const authSlice = createSlice({\n\tname: 'auth',\n\tinitialState,\n\t// NOT ASYNC\n\treducers: {\n\t\treset: (state) => {\n\t\t\tstate.isLoading = state.isError = state.isSuccess = false;\n\t\t\tstate.message = '';\n\t\t},\n\t},\n\t// ASYNC\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(register.pending, (state: any) => {\n\t\t\tconsole.log('fetching exercises...');\n\t\t});\n\t\tbuilder.addCase(register.fulfilled, (state: any) => {\n\t\t\tconsole.log('fetching exercises...');\n\t\t});\n\t\tbuilder.addCase(register.rejected, (state: any) => {\n\t\t\tconsole.log('fetching exercises...');\n\t\t});\n\t},\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}