{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  name: '',\n  email: '',\n  isValid: false\n};\nexport const fetchLogin = createAsyncThunk('authenticate/fetchLogin', async (state, payload) => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/register', payload, {\n      headers: {\n        'content-type': 'text/json'\n      }\n    });\n    const data = await response;\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'authenticate',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchLogin.pending]: action => {\n      console.log('fetching exercises...');\n    },\n    [fetchLogin.fulfilled]: action => {\n      console.log('fetching exercises...');\n    }\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/stephen/business/journal-full/frontend/src/redux/authSlice.ts"],"names":["createSlice","createAsyncThunk","axios","initialState","name","email","isValid","fetchLogin","state","payload","response","post","headers","data","err","console","log","authSlice","reducers","extraReducers","pending","action","fulfilled","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAqCC,gBAArC,QAA6D,kBAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AASA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAArB;AAMA,OAAO,MAAMC,UAAe,GAAGN,gBAAgB,CAAC,yBAAD,EAA4B,OAAOO,KAAP,EAAcC,OAAd,KAA0B;AACpG,MAAI;AACH,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,oCAAX,EAAiDF,OAAjD,EAA0D;AAAEG,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAA1D,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMH,QAAnB;AACA,WAAOG,IAAP;AACA,GAJD,CAIE,OAAOC,GAAP,EAAY;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACD,CAR8C,CAAxC;AAUP,OAAO,MAAMG,SAAS,GAAGjB,WAAW,CAAC;AACpCI,EAAAA,IAAI,EAAE,cAD8B;AAEpCD,EAAAA,YAFoC;AAGpCe,EAAAA,QAAQ,EAAE,EAH0B;AAIpCC,EAAAA,aAAa,EAAE;AACd,KAACZ,UAAU,CAACa,OAAZ,GAAuBC,MAAD,IAAiB;AACtCN,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,KAHa;AAId,KAACT,UAAU,CAACe,SAAZ,GAAyBD,MAAD,IAAiB;AACxCN,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA;AANa;AAJqB,CAAD,CAA7B;AAcP,eAAeC,SAAS,CAACM,OAAzB","sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport interface Login {\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tconfirmpassword: string;\n}\n\nconst initialState = {\n\tname: '',\n\temail: '',\n\tisValid: false,\n};\n\nexport const fetchLogin: any = createAsyncThunk('authenticate/fetchLogin', async (state, payload) => {\n\ttry {\n\t\tconst response = await axios.post('http://localhost:5000/api/register', payload, { headers: { 'content-type': 'text/json' } });\n\t\tconst data = await response;\n\t\treturn data;\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n});\n\nexport const authSlice = createSlice({\n\tname: 'authenticate',\n\tinitialState,\n\treducers: {},\n\textraReducers: {\n\t\t[fetchLogin.pending]: (action: any) => {\n\t\t\tconsole.log('fetching exercises...');\n\t\t},\n\t\t[fetchLogin.fulfilled]: (action: any) => {\n\t\t\tconsole.log('fetching exercises...');\n\t\t},\n\t},\n});\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}