{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport logsSlice from './logsSlice';\nexport const store = configureStore({\n  reducer: {\n    journallogs: logsSlice\n  }\n}); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["/Users/stephen/business/journal-full/frontend/src/redux/store.ts"],"names":["configureStore","logsSlice","store","reducer","journallogs"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;AACnCG,EAAAA,OAAO,EAAE;AACRC,IAAAA,WAAW,EAAEH;AADL;AAD0B,CAAD,CAA5B,C,CAMP","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport logsSlice from './logsSlice';\nimport authSlice from './authSlice';\n\nexport const store = configureStore({\n\treducer: {\n\t\tjournallogs: logsSlice,\n\t},\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}