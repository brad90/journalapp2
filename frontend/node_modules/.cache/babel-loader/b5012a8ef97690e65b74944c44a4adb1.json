{"ast":null,"code":"const {\n  MongoClient,\n  ServerApiVersion\n} = require('mongodb');\n\nconst uri = 'mongodb+srv://journal_admin:gZ86yFoRRsk63jpK@journal.l48zu.mongodb.net/myFirstDatabase?retryWrites=true&w=majority';\nconst client = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  serverApi: ServerApiVersion.v1\n});\nconst db = client.db('test'); // db.collection('inventory')\n// \t.insertOne({\n// \t\titem: 'canvas',\n// \t\tqty: 100,\n// \t\ttags: ['cotton'],\n// \t\tsize: { h: 28, w: 35.5, uom: 'cm' },\n// \t})\n// \t.then(function (result) {\n// \t\t// process result\n// \t});\n\nexport const getLogs = async () => {// client.connect((err) => {\n  // \tconst collection = client.db('test').collection('devices');\n  // \tconsole.log(collection);\n  // \tclient.close();\n  // });\n}; // export const getLogs = async (userID: number, logCount: number): Promise<AxiosResponse<LogsApiType>> => {\n// \ttry {\n// \t\t// await client.connect();\n// \t\tconst userLogs: AxiosResponse<LogsApiType> = await axios.get('mongodb+srv://journal_admin:gZ86yFoRRsk63jpK@journal.l48zu.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n// \t\treturn userLogs;\n// \t} catch (error) {\n// \t\tthrow new Error('error');\n// \t}\n// };","map":{"version":3,"sources":["/Users/stephen/business/journal/frontend/src/api/api.ts"],"names":["MongoClient","ServerApiVersion","require","uri","client","useNewUrlParser","useUnifiedTopology","serverApi","v1","db","getLogs"],"mappings":"AAGA,MAAM;AAAEA,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,SAAD,CAAjD;;AACA,MAAMC,GAAG,GAAG,oHAAZ;AACA,MAAMC,MAAM,GAAG,IAAIJ,WAAJ,CAAgBG,GAAhB,EAAqB;AAAEE,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE,IAA7C;AAAmDC,EAAAA,SAAS,EAAEN,gBAAgB,CAACO;AAA/E,CAArB,CAAf;AAEA,MAAMC,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,MAAV,CAAX,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAG,YAAY,CAClC;AACA;AACA;AACA;AACA;AACA,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { LogsApiType, INewLog } from '../redux/type';\n\nconst { MongoClient, ServerApiVersion } = require('mongodb');\nconst uri = 'mongodb+srv://journal_admin:gZ86yFoRRsk63jpK@journal.l48zu.mongodb.net/myFirstDatabase?retryWrites=true&w=majority';\nconst client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true, serverApi: ServerApiVersion.v1 });\n\nconst db = client.db('test');\n\n// db.collection('inventory')\n// \t.insertOne({\n// \t\titem: 'canvas',\n// \t\tqty: 100,\n// \t\ttags: ['cotton'],\n// \t\tsize: { h: 28, w: 35.5, uom: 'cm' },\n// \t})\n// \t.then(function (result) {\n// \t\t// process result\n// \t});\n\nexport const getLogs = async () => {\n\t// client.connect((err) => {\n\t// \tconst collection = client.db('test').collection('devices');\n\t// \tconsole.log(collection);\n\t// \tclient.close();\n\t// });\n};\n\n// export const getLogs = async (userID: number, logCount: number): Promise<AxiosResponse<LogsApiType>> => {\n// \ttry {\n// \t\t// await client.connect();\n// \t\tconst userLogs: AxiosResponse<LogsApiType> = await axios.get('mongodb+srv://journal_admin:gZ86yFoRRsk63jpK@journal.l48zu.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n// \t\treturn userLogs;\n// \t} catch (error) {\n// \t\tthrow new Error('error');\n// \t}\n// };\n"]},"metadata":{},"sourceType":"module"}